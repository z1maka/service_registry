#!/usr/bin/env node

const axios = require("axios");
const http = require("http");

const config = require("../config")[process.env.NODE_ENV || "development"];

const log = config.log();
const service = require("../server/service")(config);

const server = http.createServer(service);

// Important - a service should not have a fixed port but should randomly choose one
server.listen(0);



server.on("listening", () => {

  server.registerService();
  const interval = setInterval(server.registerService, 15000);

  const cleanup = async () => {
    clearInterval(interval);
    await server.unregisterService();
  };

  process.on("uncaughtException", async () => {
    await cleanup();
    process.exit(0);
  });

  process.on("SIGINT", async () => {
    await cleanup();
    process.exit(0);
  });

  process.on("SIGTERM", async () => {
    await cleanup();
    process.exit(0);
  });

  log.info(`Feedback service is listening on port ${server.address().port}`);
});


server.registerService =  function (){
  axios.put(`http://localhost:3000/register/${config.name}/${config.version}/${server.address().port}`)
      .catch((err) => log.fatal(err));
}

server.unregisterService = function (){
  axios.delete(`http://localhost:3000/register/${config.name}/${config.version}/${server.address().port}`)
      .catch((err) => log.fatal(err));
}
